Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.10.19/x64/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Save this program as EXChapter3_1.py
import numpy as np
import matplotlib.pyplot as plt
# pick any parameter q > 0 to generate a signal exp(-qt)u(t)
q = 2
# select parameters T0, Ts, and N
Ts = 1/64;  T0 = 4
N0 = int(T0 / Ts)  			# fix N0 sampling points in T0
t = np.arange(N0) * Ts 		# obtain the time-sampled signals
g = Ts * np.exp(-q * t)
g[0] = Ts * 0.5 				# fix the t=0 sample value
Gnum = np.fft.fft(g)			# use numerical FFT to find G(f)
# computing magnitude/phase of DFT:
Gp, Gm = np.angle(Gnum), np.abs(Gnum)
# take N0 uniform samples in frequency:
k = np.arange(N0);		fvec = k / (N0 * Ts)

# compute theoretical G(f) as benchmark to numerical computation
Gthy = 1 / (q + 1j * 2 * np.pi * fvec)

# compare the analytical results of Fourier Transform
fig, axs = plt.subplots(2, 1, figsize=(8, 6))
axs[0].stem(fvec[:32], Gm[:32], linefmt='b')
axs[0].plot(fvec[:32], np.abs(Gthy)[:32], 'k-', linewidth=2)
axs[0].set_title('Magnitude');  axs[0].grid(True)
axs[0].set_xlabel(r'$f$ (Hz)')
axs[0].set_ylabel(r'$|G(f)|$')
axs[1].stem(fvec[:32], Gp[:32], linefmt='b')
axs[1].plot(fvec[:32], np.angle(Gthy)[:32], 'k-', linewidth=2)
axs[1].set_title('Phase');      axs[1].grid(True)
axs[1].set_xlabel(r'$f$ (Hz)')
axs[1].set_ylabel(r'$\theta_g(f)$ (rad)')
axs[1].set_ylim([-2,0])
# Set the spacing between subfigures
fig.tight_layout(pad=1.0)
plt.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[1], line 2[0m
[1;32m      1[0m [38;5;66;03m# Save this program as EXChapter3_1.py[39;00m
[0;32m----> 2[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mnumpy[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[38;5;21;01mnp[39;00m
[1;32m      3[0m [38;5;28;01mimport[39;00m[38;5;250m [39m[38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[38;5;21;01mplt[39;00m
[1;32m      4[0m [38;5;66;03m# pick any parameter q > 0 to generate a signal exp(-qt)u(t)[39;00m

[0;31mModuleNotFoundError[0m: No module named 'numpy'

